// <auto-generated />
using System;
using Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Data.Migraions
{
    [DbContext(typeof(ShelterContext))]
    [Migration("20230113102802_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.0");

            modelBuilder.Entity("Core.Enitites.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<int>("BreedTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool?>("HasVaccines")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureUrl")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("BreedTypeId");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("Core.Enitites.Breeds.BreedType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BreedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("BreedsCollectionId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BreedsCollectionId");

                    b.ToTable("BreedTypes");
                });

            modelBuilder.Entity("Core.Enitites.Breeds.Breeds", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("BreedCollectionName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BreedsCollection");
                });

            modelBuilder.Entity("Core.Enitites.Location", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("FlatNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("House")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("Core.Enitites.Animal", b =>
                {
                    b.HasOne("Core.Enitites.Breeds.BreedType", "BreedType")
                        .WithMany("Animals")
                        .HasForeignKey("BreedTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BreedType");
                });

            modelBuilder.Entity("Core.Enitites.Breeds.BreedType", b =>
                {
                    b.HasOne("Core.Enitites.Breeds.Breeds", "BreedsCollection")
                        .WithMany("BreedTypesCollection")
                        .HasForeignKey("BreedsCollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BreedsCollection");
                });

            modelBuilder.Entity("Core.Enitites.Breeds.BreedType", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Core.Enitites.Breeds.Breeds", b =>
                {
                    b.Navigation("BreedTypesCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
